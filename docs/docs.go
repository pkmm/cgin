// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-02-15 00:48:50.7069174 +0800 CST m=+0.110073101

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "description": "auth model",
                        "name": "auth_model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/co.AuthModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.Response"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "获取认证的自己",
                "parameters": [
                    {
                        "description": "get auth self",
                        "name": "auth_credit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/co.AuthCredit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.Response"
                        }
                    }
                }
            }
        },
        "/thinking/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "值得深思的句子",
                "parameters": [
                    {
                        "description": "page size",
                        "name": "paging",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/co.PageLimitOffset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.Response"
                        }
                    }
                }
            }
        },
        "/trigger/cron": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "定时任务触发器",
                "parameters": [
                    {
                        "description": "job name",
                        "name": "job_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/co.TaskName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "co.AuthCredit": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "tokne_example.asdass"
                }
            }
        },
        "co.AuthModel": {
            "type": "object",
            "properties": {
                "device_type": {
                    "type": "integer",
                    "example": 1
                },
                "openid": {
                    "type": "string",
                    "example": "aqe"
                },
                "sign": {
                    "type": "string",
                    "example": "ewe"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjgsImV4cCI6MTU2MjQ2NTY0MSwiaXNzIjoiY2NsYSJ9.J3QXF3tZlvzyWvx8VG9EibUIr5mHK0xg3mjxY8LGhk8"
                }
            }
        },
        "co.PageLimitOffset": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "size": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "co.TaskName": {
            "type": "object",
            "properties": {
                "job_name": {
                    "type": "string",
                    "example": "sign_baidu_tieba"
                }
            }
        },
        "service.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8654",
	BasePath:    "/api",
	Schemes:     []string{},
	Title:       "My Server cgin",
	Description: "this is a custom server of my interesting.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
